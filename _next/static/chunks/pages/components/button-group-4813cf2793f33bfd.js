(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6689],{91994:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/button-group",function(){return t(68236)}])},68236:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return H}});var o=t(85893),l=t(86886),i=t(15861),a=t(93682),r=t(11057),s=t(56863);let u=()=>(0,o.jsxs)("div",{className:"demo-space-y",children:[(0,o.jsx)("div",{children:(0,o.jsxs)(s.Z,{variant:"outlined",children:[(0,o.jsx)(r.Z,{children:"One"}),(0,o.jsx)(r.Z,{children:"Two"}),(0,o.jsx)(r.Z,{children:"Three"})]})}),(0,o.jsx)("div",{children:(0,o.jsxs)(s.Z,{variant:"tonal",children:[(0,o.jsx)(r.Z,{children:"One"}),(0,o.jsx)(r.Z,{children:"Two"}),(0,o.jsx)(r.Z,{children:"Three"})]})}),(0,o.jsx)("div",{children:(0,o.jsxs)(s.Z,{variant:"contained",children:[(0,o.jsx)(r.Z,{children:"One"}),(0,o.jsx)(r.Z,{children:"Two"}),(0,o.jsx)(r.Z,{children:"Three"})]})}),(0,o.jsx)("div",{children:(0,o.jsxs)(s.Z,{variant:"text",children:[(0,o.jsx)(r.Z,{children:"One"}),(0,o.jsx)(r.Z,{children:"Two"}),(0,o.jsx)(r.Z,{children:"Three"})]})})]}),c=()=>(0,o.jsxs)("div",{className:"demo-space-y",children:[(0,o.jsx)("div",{children:(0,o.jsxs)(s.Z,{size:"small",children:[(0,o.jsx)(r.Z,{children:"One"}),(0,o.jsx)(r.Z,{children:"Two"}),(0,o.jsx)(r.Z,{children:"Three"})]})}),(0,o.jsx)("div",{children:(0,o.jsxs)(s.Z,{size:"medium",children:[(0,o.jsx)(r.Z,{children:"One"}),(0,o.jsx)(r.Z,{children:"Two"}),(0,o.jsx)(r.Z,{children:"Three"})]})}),(0,o.jsx)("div",{children:(0,o.jsxs)(s.Z,{size:"large",children:[(0,o.jsx)(r.Z,{children:"One"}),(0,o.jsx)(r.Z,{children:"Two"}),(0,o.jsx)(r.Z,{children:"Three"})]})})]});var g=t(67294),d=t(96514),x=t(90629),m=t(68155),h=t(18972),p=t(84118),B=t(23926),j=t(79878);let v=["Create a merge commit","Squash and merge","Rebase and merge"],b=()=>{let[n,e]=(0,g.useState)(!1),[t,l]=(0,g.useState)(1),i=(0,g.useRef)(null),a=()=>{console.info("You clicked '".concat(v[t],"'"))},u=(n,t)=>{l(t),e(!1)},c=()=>{e(n=>!n)},b=()=>{e(!1)};return(0,o.jsxs)(g.Fragment,{children:[(0,o.jsxs)(s.Z,{variant:"contained",ref:i,"aria-label":"split button",children:[(0,o.jsx)(r.Z,{onClick:a,children:v[t]}),(0,o.jsx)(r.Z,{sx:{px:"0"},"aria-haspopup":"menu",onClick:c,"aria-label":"select merge strategy","aria-expanded":n?"true":void 0,"aria-controls":n?"split-button-menu":void 0,children:(0,o.jsx)(j.Z,{icon:"tabler:chevron-down"})})]}),(0,o.jsx)(m.Z,{open:n,anchorEl:i.current,role:void 0,transition:!0,disablePortal:!0,children:n=>{let{TransitionProps:e,placement:l}=n;return(0,o.jsx)(d.Z,{...e,style:{transformOrigin:"bottom"===l?"center top":"center bottom"},children:(0,o.jsx)(x.Z,{children:(0,o.jsx)(B.Z,{onClickAway:b,children:(0,o.jsx)(p.Z,{id:"split-button-menu",children:v.map((n,e)=>(0,o.jsx)(h.Z,{disabled:2===e,selected:e===t,onClick:n=>u(n,e),children:n},n))})})})})}})]})},T=()=>(0,o.jsxs)("div",{className:"demo-space-x",children:[(0,o.jsxs)(s.Z,{variant:"outlined",color:"secondary",children:[(0,o.jsx)(r.Z,{children:"One"}),(0,o.jsx)(r.Z,{children:"Two"}),(0,o.jsx)(r.Z,{children:"Three"})]}),(0,o.jsxs)(s.Z,{variant:"outlined",color:"success",children:[(0,o.jsx)(r.Z,{children:"One"}),(0,o.jsx)(r.Z,{children:"Two"}),(0,o.jsx)(r.Z,{children:"Three"})]}),(0,o.jsxs)(s.Z,{variant:"outlined",color:"error",children:[(0,o.jsx)(r.Z,{children:"One"}),(0,o.jsx)(r.Z,{children:"Two"}),(0,o.jsx)(r.Z,{children:"Three"})]}),(0,o.jsxs)(s.Z,{variant:"outlined",color:"warning",children:[(0,o.jsx)(r.Z,{children:"One"}),(0,o.jsx)(r.Z,{children:"Two"}),(0,o.jsx)(r.Z,{children:"Three"})]}),(0,o.jsxs)(s.Z,{variant:"outlined",color:"info",children:[(0,o.jsx)(r.Z,{children:"One"}),(0,o.jsx)(r.Z,{children:"Two"}),(0,o.jsx)(r.Z,{children:"Three"})]})]});var f=t(96420),Z=t(33454);let G=()=>{let[n,e]=(0,g.useState)("left"),t=(n,t)=>{e(t)};return(0,o.jsxs)("div",{className:"demo-space-y",children:[(0,o.jsx)("div",{children:(0,o.jsxs)(Z.Z,{exclusive:!0,size:"small",value:n,onChange:t,"aria-label":"text alignment",children:[(0,o.jsx)(f.Z,{value:"left","aria-label":"left aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:align-left"})}),(0,o.jsx)(f.Z,{value:"center","aria-label":"center aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:align-center"})}),(0,o.jsx)(f.Z,{value:"right","aria-label":"right aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:align-right"})}),(0,o.jsx)(f.Z,{value:"justify","aria-label":"justified",disabled:!0,children:(0,o.jsx)(j.Z,{icon:"tabler:align-justified"})})]})}),(0,o.jsx)("div",{children:(0,o.jsxs)(Z.Z,{exclusive:!0,value:n,onChange:t,"aria-label":"text alignment",children:[(0,o.jsx)(f.Z,{value:"left","aria-label":"left aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:align-left"})}),(0,o.jsx)(f.Z,{value:"center","aria-label":"center aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:align-center"})}),(0,o.jsx)(f.Z,{value:"right","aria-label":"right aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:align-right"})}),(0,o.jsx)(f.Z,{value:"justify","aria-label":"justified",disabled:!0,children:(0,o.jsx)(j.Z,{icon:"tabler:align-justified"})})]})}),(0,o.jsx)("div",{children:(0,o.jsxs)(Z.Z,{exclusive:!0,size:"large",value:n,onChange:t,"aria-label":"text alignment",children:[(0,o.jsx)(f.Z,{value:"left","aria-label":"left aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:align-left"})}),(0,o.jsx)(f.Z,{value:"center","aria-label":"center aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:align-center"})}),(0,o.jsx)(f.Z,{value:"right","aria-label":"right aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:align-right"})}),(0,o.jsx)(f.Z,{value:"justify","aria-label":"justified",disabled:!0,children:(0,o.jsx)(j.Z,{icon:"tabler:align-justified"})})]})})]})},w=()=>{let[n,e]=(0,g.useState)("left"),t=(n,t)=>{e(t)};return(0,o.jsxs)(Z.Z,{exclusive:!0,value:n,onChange:t,"aria-label":"text alignment",children:[(0,o.jsx)(f.Z,{value:"left","aria-label":"left aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:align-left"})}),(0,o.jsx)(f.Z,{value:"center","aria-label":"center aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:align-center"})}),(0,o.jsx)(f.Z,{value:"right","aria-label":"right aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:align-right"})}),(0,o.jsx)(f.Z,{value:"justify","aria-label":"justified",disabled:!0,children:(0,o.jsx)(j.Z,{icon:"tabler:align-justified"})})]})},I=()=>{let[n,e]=(0,g.useState)("web"),t=(n,t)=>{e(t)};return(0,o.jsxs)("div",{className:"demo-space-x",children:[(0,o.jsxs)(Z.Z,{exclusive:!0,color:"primary",value:n,onChange:t,children:[(0,o.jsx)(f.Z,{value:"web",children:"Web"}),(0,o.jsx)(f.Z,{value:"android",children:"Android"}),(0,o.jsx)(f.Z,{value:"ios",children:"iOS"})]}),(0,o.jsxs)(Z.Z,{exclusive:!0,color:"secondary",value:n,onChange:t,children:[(0,o.jsx)(f.Z,{value:"web",children:"Web"}),(0,o.jsx)(f.Z,{value:"android",children:"Android"}),(0,o.jsx)(f.Z,{value:"ios",children:"iOS"})]}),(0,o.jsxs)(Z.Z,{exclusive:!0,color:"success",value:n,onChange:t,children:[(0,o.jsx)(f.Z,{value:"web",children:"Web"}),(0,o.jsx)(f.Z,{value:"android",children:"Android"}),(0,o.jsx)(f.Z,{value:"ios",children:"iOS"})]}),(0,o.jsxs)(Z.Z,{exclusive:!0,color:"error",value:n,onChange:t,children:[(0,o.jsx)(f.Z,{value:"web",children:"Web"}),(0,o.jsx)(f.Z,{value:"android",children:"Android"}),(0,o.jsx)(f.Z,{value:"ios",children:"iOS"})]}),(0,o.jsxs)(Z.Z,{exclusive:!0,color:"warning",value:n,onChange:t,children:[(0,o.jsx)(f.Z,{value:"web",children:"Web"}),(0,o.jsx)(f.Z,{value:"android",children:"Android"}),(0,o.jsx)(f.Z,{value:"ios",children:"iOS"})]}),(0,o.jsxs)(Z.Z,{exclusive:!0,color:"info",value:n,onChange:t,children:[(0,o.jsx)(f.Z,{value:"web",children:"Web"}),(0,o.jsx)(f.Z,{value:"android",children:"Android"}),(0,o.jsx)(f.Z,{value:"ios",children:"iOS"})]})]})},S=()=>(0,o.jsxs)("div",{className:"demo-space-x",children:[(0,o.jsxs)(s.Z,{variant:"outlined",orientation:"vertical",children:[(0,o.jsx)(r.Z,{children:"One"}),(0,o.jsx)(r.Z,{children:"Two"}),(0,o.jsx)(r.Z,{children:"Three"})]}),(0,o.jsxs)(s.Z,{variant:"tonal",orientation:"vertical",children:[(0,o.jsx)(r.Z,{children:"One"}),(0,o.jsx)(r.Z,{children:"Two"}),(0,o.jsx)(r.Z,{children:"Three"})]}),(0,o.jsxs)(s.Z,{variant:"contained",orientation:"vertical",children:[(0,o.jsx)(r.Z,{children:"One"}),(0,o.jsx)(r.Z,{children:"Two"}),(0,o.jsx)(r.Z,{children:"Three"})]}),(0,o.jsxs)(s.Z,{variant:"text",orientation:"vertical",children:[(0,o.jsx)(r.Z,{children:"One"}),(0,o.jsx)(r.Z,{children:"Two"}),(0,o.jsx)(r.Z,{children:"Three"})]})]}),C=()=>{let[n,e]=(0,g.useState)(()=>["bold","italic"]),t=(n,t)=>{e(t)};return(0,o.jsxs)(Z.Z,{value:n,onChange:t,"aria-label":"text alignment",children:[(0,o.jsx)(f.Z,{value:"bold","aria-label":"bold",children:(0,o.jsx)(j.Z,{icon:"tabler:bold"})}),(0,o.jsx)(f.Z,{value:"italic","aria-label":"italic",children:(0,o.jsx)(j.Z,{icon:"tabler:italic"})}),(0,o.jsx)(f.Z,{value:"underlined","aria-label":"underlined",children:(0,o.jsx)(j.Z,{icon:"tabler:underline"})}),(0,o.jsx)(f.Z,{value:"color","aria-label":"color",disabled:!0,children:(0,o.jsx)(j.Z,{icon:"tabler:color-swatch"})})]})},y=()=>{let[n,e]=(0,g.useState)("left"),t=(n,t)=>{e(t)};return(0,o.jsxs)(Z.Z,{exclusive:!0,value:n,orientation:"vertical",onChange:t,"aria-label":"text alignment",children:[(0,o.jsx)(f.Z,{value:"left","aria-label":"left aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:list"})}),(0,o.jsx)(f.Z,{value:"center","aria-label":"center aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:list-numbers"})}),(0,o.jsx)(f.Z,{value:"right","aria-label":"right aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:list-check"})})]})};var A=t(99226),O=t(67720),N=t(90948);let P=(0,N.ZP)(f.Z)(n=>{let{theme:e}=n;return{margin:e.spacing(1),border:"none !important",padding:e.spacing(2),"&:not(:first-of-type)":{borderRadius:"".concat(e.shape.borderRadius,"px !important")},"&:first-of-type":{borderRadius:"".concat(e.shape.borderRadius,"px !important")}}}),k=()=>{let[n,e]=(0,g.useState)("left"),[t,l]=(0,g.useState)(()=>["italic"]),i=(n,t)=>{e(t)},a=(n,e)=>{l(e)};return(0,o.jsxs)(A.Z,{sx:{display:"flex",flexWrap:"wrap"},children:[(0,o.jsxs)(Z.Z,{exclusive:!0,value:n,onChange:i,"aria-label":"text alignment",children:[(0,o.jsx)(P,{value:"left","aria-label":"left aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:align-left"})}),(0,o.jsx)(P,{value:"center","aria-label":"center aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:align-center"})}),(0,o.jsx)(P,{value:"right","aria-label":"right aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:align-right"})}),(0,o.jsx)(P,{value:"justify","aria-label":"justified",disabled:!0,children:(0,o.jsx)(j.Z,{icon:"tabler:align-justified"})})]}),(0,o.jsx)(O.Z,{flexItem:!0,orientation:"vertical",sx:{m:1}}),(0,o.jsxs)(Z.Z,{value:t,onChange:a,"aria-label":"text alignment",children:[(0,o.jsx)(P,{value:"bold","aria-label":"bold",children:(0,o.jsx)(j.Z,{icon:"tabler:bold"})}),(0,o.jsx)(P,{value:"italic","aria-label":"italic",children:(0,o.jsx)(j.Z,{icon:"tabler:italic"})}),(0,o.jsx)(P,{value:"underlined","aria-label":"underlined",children:(0,o.jsx)(j.Z,{icon:"tabler:underline"})}),(0,o.jsx)(P,{value:"color","aria-label":"color",disabled:!0,children:(0,o.jsx)(j.Z,{icon:"tabler:color-swatch"})})]})]})},M=()=>{let[n,e]=(0,g.useState)(()=>["phone"]),[t,a]=(0,g.useState)("left"),r=(n,e)=>{null!==e&&a(e)},s=(n,t)=>{t.length&&e(t)};return(0,o.jsxs)(l.ZP,{container:!0,spacing:6,children:[(0,o.jsxs)(l.ZP,{item:!0,xs:12,sm:6,children:[(0,o.jsx)(i.Z,{sx:{fontWeight:500,mb:2},children:"Exclusive Selection"}),(0,o.jsxs)(Z.Z,{exclusive:!0,value:t,onChange:r,"aria-label":"text alignment",children:[(0,o.jsx)(f.Z,{value:"left","aria-label":"left aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:align-left"})}),(0,o.jsx)(f.Z,{value:"center","aria-label":"center aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:align-center"})}),(0,o.jsx)(f.Z,{value:"right","aria-label":"right aligned",children:(0,o.jsx)(j.Z,{icon:"tabler:align-right"})}),(0,o.jsx)(f.Z,{value:"justify","aria-label":"justified",disabled:!0,children:(0,o.jsx)(j.Z,{icon:"tabler:align-justified"})})]})]}),(0,o.jsxs)(l.ZP,{item:!0,xs:12,sm:6,children:[(0,o.jsx)(i.Z,{sx:{fontWeight:500,mb:2},children:"Multiple Selection"}),(0,o.jsxs)(Z.Z,{value:n,onChange:s,"aria-label":"device",children:[(0,o.jsx)(f.Z,{value:"laptop","aria-label":"laptop",children:(0,o.jsx)(j.Z,{icon:"tabler:device-laptop"})}),(0,o.jsx)(f.Z,{value:"desktop","aria-label":"desktop",children:(0,o.jsx)(j.Z,{icon:"tabler:device-desktop"})}),(0,o.jsx)(f.Z,{value:"phone","aria-label":"phone",children:(0,o.jsx)(j.Z,{icon:"tabler:device-mobile"})})]})]})]})},z=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nconst ButtonGroupBasic = () => {\n  return (\n    <div className='demo-space-y'>\n      <div>\n        <ButtonGroup variant='outlined'>\n          <Button>One</Button>\n          <Button>Two</Button>\n          <Button>Three</Button>\n        </ButtonGroup>\n      </div>\n      <div>\n        <ButtonGroup variant='tonal'>\n          <Button>One</Button>\n          <Button>Two</Button>\n          <Button>Three</Button>\n        </ButtonGroup>\n      </div>\n      <div>\n        <ButtonGroup variant='contained'>\n          <Button>One</Button>\n          <Button>Two</Button>\n          <Button>Three</Button>\n        </ButtonGroup>\n      </div>\n      <div>\n        <ButtonGroup variant='text'>\n          <Button>One</Button>\n          <Button>Two</Button>\n          <Button>Three</Button>\n        </ButtonGroup>\n      </div>\n    </div>\n  )\n}\n\nexport default ButtonGroupBasic\n"})}),R=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useRef, useState, Fragment } from 'react'\n\n// ** MUI Imports\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Button from '@mui/material/Button'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\nconst options = ['Create a merge commit', 'Squash and merge', 'Rebase and merge']\n\nconst ButtonGroupSplit = () => {\n  // ** States\n  const [open, setOpen] = useState(false)\n  const [selectedIndex, setSelectedIndex] = useState(1)\n\n  // ** Ref\n  const anchorRef = useRef(null)\n\n  const handleClick = () => {\n    console.info(You clicked '{options[selectedIndex]}')\n  }\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index)\n    setOpen(false)\n  }\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <Fragment>\n      <ButtonGroup variant='contained' ref={anchorRef} aria-label='split button'>\n        <Button onClick={handleClick}>{options[selectedIndex]}</Button>\n        <Button\n          sx={{ px: '0' }}\n          aria-haspopup='menu'\n          onClick={handleToggle}\n          aria-label='select merge strategy'\n          aria-expanded={open ? 'true' : undefined}\n          aria-controls={open ? 'split-button-menu' : undefined}\n        >\n          <Icon icon='tabler:chevron-down' />\n        </Button>\n      </ButtonGroup>\n      <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id='split-button-menu'>\n                  {options.map((option, index) => (\n                    <MenuItem\n                      key={option}\n                      disabled={index === 2}\n                      selected={index === selectedIndex}\n                      onClick={event => handleMenuItemClick(event, index)}\n                    >\n                      {option}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </Fragment>\n  )\n}\n\nexport default ButtonGroupSplit\n"})}),F=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nconst ButtonGroupColor = () => {\n  return (\n    <div className='demo-space-x'>\n      <ButtonGroup variant='outlined' color='secondary'>\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n\n      <ButtonGroup variant='outlined' color='success'>\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n\n      <ButtonGroup variant='outlined' color='error'>\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n\n      <ButtonGroup variant='outlined' color='warning'>\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n\n      <ButtonGroup variant='outlined' color='info'>\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n    </div>\n  )\n}\n\nexport default ButtonGroupColor\n"})}),U=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nconst ButtonGroupSizes = () => {\n  return (\n    <div className='demo-space-y'>\n      <div>\n        <ButtonGroup size='small'>\n          <Button>One</Button>\n          <Button>Two</Button>\n          <Button>Three</Button>\n        </ButtonGroup>\n      </div>\n      <div>\n        <ButtonGroup size='medium'>\n          <Button>One</Button>\n          <Button>Two</Button>\n          <Button>Three</Button>\n        </ButtonGroup>\n      </div>\n      <div>\n        <ButtonGroup size='large'>\n          <Button>One</Button>\n          <Button>Two</Button>\n          <Button>Three</Button>\n        </ButtonGroup>\n      </div>\n    </div>\n  )\n}\n\nexport default ButtonGroupSizes\n"})}),W=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\n\nconst ButtonToggleColors = () => {\n  // ** State\n  const [alignment, setAlignment] = useState('web')\n\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment)\n  }\n\n  return (\n    <div className='demo-space-x'>\n      <ToggleButtonGroup exclusive color='primary' value={alignment} onChange={handleAlignment}>\n        <ToggleButton value='web'>Web</ToggleButton>\n        <ToggleButton value='android'>Android</ToggleButton>\n        <ToggleButton value='ios'>iOS</ToggleButton>\n      </ToggleButtonGroup>\n\n      <ToggleButtonGroup exclusive color='secondary' value={alignment} onChange={handleAlignment}>\n        <ToggleButton value='web'>Web</ToggleButton>\n        <ToggleButton value='android'>Android</ToggleButton>\n        <ToggleButton value='ios'>iOS</ToggleButton>\n      </ToggleButtonGroup>\n\n      <ToggleButtonGroup exclusive color='success' value={alignment} onChange={handleAlignment}>\n        <ToggleButton value='web'>Web</ToggleButton>\n        <ToggleButton value='android'>Android</ToggleButton>\n        <ToggleButton value='ios'>iOS</ToggleButton>\n      </ToggleButtonGroup>\n\n      <ToggleButtonGroup exclusive color='error' value={alignment} onChange={handleAlignment}>\n        <ToggleButton value='web'>Web</ToggleButton>\n        <ToggleButton value='android'>Android</ToggleButton>\n        <ToggleButton value='ios'>iOS</ToggleButton>\n      </ToggleButtonGroup>\n\n      <ToggleButtonGroup exclusive color='warning' value={alignment} onChange={handleAlignment}>\n        <ToggleButton value='web'>Web</ToggleButton>\n        <ToggleButton value='android'>Android</ToggleButton>\n        <ToggleButton value='ios'>iOS</ToggleButton>\n      </ToggleButtonGroup>\n\n      <ToggleButtonGroup exclusive color='info' value={alignment} onChange={handleAlignment}>\n        <ToggleButton value='web'>Web</ToggleButton>\n        <ToggleButton value='android'>Android</ToggleButton>\n        <ToggleButton value='ios'>iOS</ToggleButton>\n      </ToggleButtonGroup>\n    </div>\n  )\n}\n\nexport default ButtonToggleColors\n"})}),V=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nconst ButtonGroupVertical = () => {\n  return (\n    <div className='demo-space-x'>\n      <ButtonGroup variant='outlined' orientation='vertical'>\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n      <ButtonGroup variant='tonal' orientation='vertical'>\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n      <ButtonGroup variant='contained' orientation='vertical'>\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n      <ButtonGroup variant='text' orientation='vertical'>\n        <Button>One</Button>\n        <Button>Two</Button>\n        <Button>Three</Button>\n      </ButtonGroup>\n    </div>\n  )\n}\n\nexport default ButtonGroupVertical\n"})}),E=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport Divider from '@mui/material/Divider'\nimport { styled } from '@mui/material/styles'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\nimport MuiToggleButton from '@mui/material/ToggleButton'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\n// Styled ToggleButton component\nconst ToggleButton = styled(MuiToggleButton)(({ theme }) => ({\n  margin: theme.spacing(1),\n  border: 'none !important',\n  padding: theme.spacing(2),\n  '&:not(:first-of-type)': {\n    borderRadius: {theme.shape.borderRadius}px !important\n  },\n  '&:first-of-type': {\n    borderRadius: {theme.shape.borderRadius}px !important\n  }\n}))\n\nconst ButtonToggleCustomized = () => {\n  // ** States\n  const [alignment, setAlignment] = useState('left')\n  const [formats, setFormats] = useState(() => ['italic'])\n\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment)\n  }\n\n  const handleFormat = (event, newFormats) => {\n    setFormats(newFormats)\n  }\n\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }}>\n      <ToggleButtonGroup exclusive value={alignment} onChange={handleAlignment} aria-label='text alignment'>\n        <ToggleButton value='left' aria-label='left aligned'>\n          <Icon icon='tabler:align-left' />\n        </ToggleButton>\n        <ToggleButton value='center' aria-label='center aligned'>\n          <Icon icon='tabler:align-center' />\n        </ToggleButton>\n        <ToggleButton value='right' aria-label='right aligned'>\n          <Icon icon='tabler:align-right' />\n        </ToggleButton>\n        <ToggleButton value='justify' aria-label='justified' disabled>\n          <Icon icon='tabler:align-justified' />\n        </ToggleButton>\n      </ToggleButtonGroup>\n      <Divider flexItem orientation='vertical' sx={{ m: 1 }} />\n      <ToggleButtonGroup value={formats} onChange={handleFormat} aria-label='text alignment'>\n        <ToggleButton value='bold' aria-label='bold'>\n          <Icon icon='tabler:bold' />\n        </ToggleButton>\n        <ToggleButton value='italic' aria-label='italic'>\n          <Icon icon='tabler:italic' />\n        </ToggleButton>\n        <ToggleButton value='underlined' aria-label='underlined'>\n          <Icon icon='tabler:underline' />\n        </ToggleButton>\n        <ToggleButton value='color' aria-label='color' disabled>\n          <Icon icon='tabler:color-swatch' />\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </Box>\n  )\n}\n\nexport default ButtonToggleCustomized\n"})}),_=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\nconst ButtonToggleMultiple = () => {\n  // ** State\n  const [formats, setFormats] = useState(() => ['bold', 'italic'])\n\n  const handleFormat = (event, newFormats) => {\n    setFormats(newFormats)\n  }\n\n  return (\n    <ToggleButtonGroup value={formats} onChange={handleFormat} aria-label='text alignment'>\n      <ToggleButton value='bold' aria-label='bold'>\n        <Icon icon='tabler:bold' />\n      </ToggleButton>\n      <ToggleButton value='italic' aria-label='italic'>\n        <Icon icon='tabler:italic' />\n      </ToggleButton>\n      <ToggleButton value='underlined' aria-label='underlined'>\n        <Icon icon='tabler:underline' />\n      </ToggleButton>\n      <ToggleButton value='color' aria-label='color' disabled>\n        <Icon icon='tabler:color-swatch' />\n      </ToggleButton>\n    </ToggleButtonGroup>\n  )\n}\n\nexport default ButtonToggleMultiple\n"})}),L=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Grid from '@mui/material/Grid'\nimport Typography from '@mui/material/Typography'\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\nconst ButtonToggleEnforceValue = () => {\n  // ** States\n  const [formats, setFormats] = useState(() => ['phone'])\n  const [alignment, setAlignment] = useState('left')\n\n  const handleAlignment = (event, newAlignment) => {\n    if (newAlignment !== null) {\n      setAlignment(newAlignment)\n    }\n  }\n\n  const handleFormat = (event, newFormats) => {\n    if (newFormats.length) {\n      setFormats(newFormats)\n    }\n  }\n\n  return (\n    <Grid container spacing={6}>\n      <Grid item xs={12} sm={6}>\n        <Typography sx={{ fontWeight: 500, mb: 2 }}>Exclusive Selection</Typography>\n        <ToggleButtonGroup exclusive value={alignment} onChange={handleAlignment} aria-label='text alignment'>\n          <ToggleButton value='left' aria-label='left aligned'>\n            <Icon icon='tabler:align-left' />\n          </ToggleButton>\n          <ToggleButton value='center' aria-label='center aligned'>\n            <Icon icon='tabler:align-center' />\n          </ToggleButton>\n          <ToggleButton value='right' aria-label='right aligned'>\n            <Icon icon='tabler:align-right' />\n          </ToggleButton>\n          <ToggleButton value='justify' aria-label='justified' disabled>\n            <Icon icon='tabler:align-justified' />\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Typography sx={{ fontWeight: 500, mb: 2 }}>Multiple Selection</Typography>\n        <ToggleButtonGroup value={formats} onChange={handleFormat} aria-label='device'>\n          <ToggleButton value='laptop' aria-label='laptop'>\n            <Icon icon='tabler:device-laptop' />\n          </ToggleButton>\n          <ToggleButton value='desktop' aria-label='desktop'>\n            <Icon icon='tabler:device-desktop' />\n          </ToggleButton>\n          <ToggleButton value='phone' aria-label='phone'>\n            <Icon icon='tabler:device-mobile' />\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default ButtonToggleEnforceValue\n"})}),D=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\nconst ButtonToggleSimple = () => {\n  // ** State\n  const [alignment, setAlignment] = useState('left')\n\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment)\n  }\n\n  return (\n    <ToggleButtonGroup exclusive value={alignment} onChange={handleAlignment} aria-label='text alignment'>\n      <ToggleButton value='left' aria-label='left aligned'>\n        <Icon icon='tabler:align-left' />\n      </ToggleButton>\n      <ToggleButton value='center' aria-label='center aligned'>\n        <Icon icon='tabler:align-center' />\n      </ToggleButton>\n      <ToggleButton value='right' aria-label='right aligned'>\n        <Icon icon='tabler:align-right' />\n      </ToggleButton>\n      <ToggleButton value='justify' aria-label='justified' disabled>\n        <Icon icon='tabler:align-justified' />\n      </ToggleButton>\n    </ToggleButtonGroup>\n  )\n}\n\nexport default ButtonToggleSimple\n"})}),q=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\nconst ButtonToggleSizes = () => {\n  // ** State\n  const [alignment, setAlignment] = useState('left')\n\n  const handleAlignment = (event, newAlignment) => {\n    setAlignment(newAlignment)\n  }\n\n  return (\n    <div className='demo-space-y'>\n      <div>\n        <ToggleButtonGroup\n          exclusive\n          size='small'\n          value={alignment}\n          onChange={handleAlignment}\n          aria-label='text alignment'\n        >\n          <ToggleButton value='left' aria-label='left aligned'>\n            <Icon icon='tabler:align-left' />\n          </ToggleButton>\n          <ToggleButton value='center' aria-label='center aligned'>\n            <Icon icon='tabler:align-center' />\n          </ToggleButton>\n          <ToggleButton value='right' aria-label='right aligned'>\n            <Icon icon='tabler:align-right' />\n          </ToggleButton>\n          <ToggleButton value='justify' aria-label='justified' disabled>\n            <Icon icon='tabler:align-justified' />\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </div>\n      <div>\n        <ToggleButtonGroup exclusive value={alignment} onChange={handleAlignment} aria-label='text alignment'>\n          <ToggleButton value='left' aria-label='left aligned'>\n            <Icon icon='tabler:align-left' />\n          </ToggleButton>\n          <ToggleButton value='center' aria-label='center aligned'>\n            <Icon icon='tabler:align-center' />\n          </ToggleButton>\n          <ToggleButton value='right' aria-label='right aligned'>\n            <Icon icon='tabler:align-right' />\n          </ToggleButton>\n          <ToggleButton value='justify' aria-label='justified' disabled>\n            <Icon icon='tabler:align-justified' />\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </div>\n      <div>\n        <ToggleButtonGroup\n          exclusive\n          size='large'\n          value={alignment}\n          onChange={handleAlignment}\n          aria-label='text alignment'\n        >\n          <ToggleButton value='left' aria-label='left aligned'>\n            <Icon icon='tabler:align-left' />\n          </ToggleButton>\n          <ToggleButton value='center' aria-label='center aligned'>\n            <Icon icon='tabler:align-center' />\n          </ToggleButton>\n          <ToggleButton value='right' aria-label='right aligned'>\n            <Icon icon='tabler:align-right' />\n          </ToggleButton>\n          <ToggleButton value='justify' aria-label='justified' disabled>\n            <Icon icon='tabler:align-justified' />\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </div>\n    </div>\n  )\n}\n\nexport default ButtonToggleSizes\n"})}),X=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport ToggleButton from '@mui/material/ToggleButton'\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup'\n\n// ** Icon Imports\nimport Icon from 'src/@core/components/icon'\n\nconst ButtonToggleVertical = () => {\n  // ** State\n  const [view, setView] = useState('left')\n\n  const handleView = (event, newView) => {\n    setView(newView)\n  }\n\n  return (\n    <ToggleButtonGroup exclusive value={view} orientation='vertical' onChange={handleView} aria-label='text alignment'>\n      <ToggleButton value='left' aria-label='left aligned'>\n        <Icon icon='tabler:list' />\n      </ToggleButton>\n      <ToggleButton value='center' aria-label='center aligned'>\n        <Icon icon='tabler:list-numbers' />\n      </ToggleButton>\n      <ToggleButton value='right' aria-label='right aligned'>\n        <Icon icon='tabler:list-check' />\n      </ToggleButton>\n    </ToggleButtonGroup>\n  )\n}\n\nexport default ButtonToggleVertical\n"})}),Y=()=>(0,o.jsxs)(l.ZP,{container:!0,spacing:6,className:"match-height",children:[(0,o.jsx)(l.ZP,{item:!0,xs:12,children:(0,o.jsx)(i.Z,{variant:"h6",children:"Button Group"})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(a.Z,{title:"Basic Button Group",code:{tsx:null,jsx:z},children:[(0,o.jsxs)(i.Z,{sx:{mb:4},children:["Use ",(0,o.jsxs)("code",{children:["variant=","{'outlined' | 'contained' | 'text'}"]})," prop with ",(0,o.jsx)("code",{children:"<ButtonGroup>"})," ","component for button groups."]}),(0,o.jsx)(u,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(a.Z,{title:"Button Group Sizes",code:{tsx:null,jsx:U},children:[(0,o.jsxs)(i.Z,{sx:{mb:4},children:["Use ",(0,o.jsxs)("code",{children:["size=","{'small' | 'medium' | 'large'}"]})," prop with ",(0,o.jsx)("code",{children:"<ButtonGroup>"})," ","component for different sizes of button groups."]}),(0,o.jsx)(c,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(a.Z,{title:"Vertical Button Group",code:{tsx:null,jsx:V},children:[(0,o.jsxs)(i.Z,{children:["Use ",(0,o.jsx)("code",{children:"orientation='vertical'"})," prop with ",(0,o.jsx)("code",{children:"<ButtonGroup>"})," component for vertical button groups."]}),(0,o.jsx)(S,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(a.Z,{title:"Split Button",code:{tsx:null,jsx:R},children:[(0,o.jsxs)(i.Z,{sx:{mb:4},children:[(0,o.jsx)("code",{children:"ButtonGroup"})," can also be used to create a split button. The dropdown can change the button action (as in this example), or be used to immediately trigger a related action."]}),(0,o.jsx)(b,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(a.Z,{title:"Button Group Colors",code:{tsx:null,jsx:F},children:[(0,o.jsxs)(i.Z,{sx:{mb:4},children:["Use ",(0,o.jsx)("code",{children:"color"})," prop for different colored button-groups."]}),(0,o.jsx)(T,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,children:(0,o.jsx)(i.Z,{variant:"h6",children:"Toggle Button"})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(a.Z,{title:"Simple Toggle Button",code:{tsx:null,jsx:D},children:[(0,o.jsxs)(i.Z,{sx:{mb:4},children:["Manage ",(0,o.jsx)("code",{children:"value"})," prop with ",(0,o.jsx)("code",{children:"<ToggleButtonGroup>"})," component with the help of a state and use ",(0,o.jsx)("code",{children:"exclusive"})," prop with ",(0,o.jsx)("code",{children:"<ToggleButtonGroup>"})," component."]}),(0,o.jsx)(w,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(a.Z,{title:"Multiple Toggle Button",code:{tsx:null,jsx:_},children:[(0,o.jsxs)(i.Z,{sx:{mb:4},children:["Manage ",(0,o.jsx)("code",{children:"value"})," prop with the help of a state with array."]}),(0,o.jsx)(C,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(a.Z,{title:"Toggle Button Sizes",code:{tsx:null,jsx:q},children:[(0,o.jsxs)(i.Z,{sx:{mb:4},children:["Use ",(0,o.jsxs)("code",{children:["size=","{'size' | 'large'}"]})," prop for different sizes."]}),(0,o.jsx)(G,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(a.Z,{title:"Vertical Toggle Button",code:{tsx:null,jsx:X},children:[(0,o.jsxs)(i.Z,{sx:{mb:4},children:["Use ",(0,o.jsx)("code",{children:"orientation='vertical'"})," prop for vertical toggle button."]}),(0,o.jsx)(y,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,children:(0,o.jsxs)(a.Z,{title:"Enforce Value Set",code:{tsx:null,jsx:L},children:[(0,o.jsxs)(i.Z,{sx:{mb:4},children:["Use ",(0,o.jsx)("code",{children:"if"})," statement in handle function in ",(0,o.jsx)("code",{children:"onChange"})," prop."]}),(0,o.jsx)(M,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,children:(0,o.jsxs)(a.Z,{title:"Customized Toggle Button",code:{tsx:null,jsx:E},children:[(0,o.jsxs)(i.Z,{sx:{mb:4},children:["Use ",(0,o.jsx)("code",{children:"styled"})," hook to customize your toggle button."]}),(0,o.jsx)(k,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(a.Z,{title:"Toggle Button Colors",code:{tsx:null,jsx:W},children:[(0,o.jsxs)(i.Z,{sx:{mb:4},children:["Use ",(0,o.jsx)("code",{children:"color"})," prop for different colored toggle-buttons."]}),(0,o.jsx)(I,{})]})})]});var H=Y}},function(n){n.O(0,[5511,7148,9774,2888,179],function(){return n(n.s=91994)}),_N_E=n.O()}]);